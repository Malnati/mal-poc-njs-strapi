"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.getTimeObject = exports.getTimeString = void 0;

var _react = _interopRequireWildcard(require("react"));

var _moment = _interopRequireDefault(require("moment"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactMomentProptypes = _interopRequireDefault(require("react-moment-proptypes"));

var _lodash = require("lodash");

var _core = require("@buffetjs/core");

var _Wrapper = _interopRequireDefault(require("./Wrapper"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var UNITS = ['hour', 'minute', 'second'];

var getTimeString = function getTimeString(time) {
  if (!time) {
    return '';
  }

  var currTime = time || (0, _moment["default"])();
  var timeObj = getTimeObject(currTime);
  var timeString = Object.keys(timeObj).map(function (key) {
    return timeObj[key] < 10 ? "0".concat(timeObj[key]) : timeObj[key];
  }).join(':');
  return timeString;
};

exports.getTimeString = getTimeString;

var getTimeObject = function getTimeObject(time) {
  var timeObj = {};
  UNITS.forEach(function (unit) {
    timeObj[unit] = time.get(unit);
  });
  return timeObj;
};

exports.getTimeObject = getTimeObject;

function DateTime(_ref) {
  var disabled = _ref.disabled,
      name = _ref.name,
      onChange = _ref.onChange,
      value = _ref.value,
      tabIndex = _ref.tabIndex,
      step = _ref.step,
      rest = _objectWithoutProperties(_ref, ["disabled", "name", "onChange", "value", "tabIndex", "step"]);

  var _useState = (0, _react.useState)(null),
      _useState2 = _slicedToArray(_useState, 2),
      timestamp = _useState2[0],
      setTimestamp = _useState2[1];

  var _useState3 = (0, _react.useState)(false),
      _useState4 = _slicedToArray(_useState3, 2),
      isInit = _useState4[0],
      setIsInit = _useState4[1];

  var setData = function setData(time) {
    var _time$split = time.split(':'),
        _time$split2 = _slicedToArray(_time$split, 3),
        hour = _time$split2[0],
        minute = _time$split2[1],
        second = _time$split2[2];

    var timeObj = {
      hour: hour,
      minute: minute,
      second: second
    };
    var currentDate = (0, _lodash.isEmpty)(timestamp) ? (0, _moment["default"])() : (0, _lodash.cloneDeep)(timestamp);
    currentDate.set('hours', timeObj.hour);
    currentDate.set('minute', timeObj.minute);
    currentDate.set('second', timeObj.second);
    setDate(currentDate);
  };

  var setDate = function setDate(date, time) {
    var newDate = time || date;
    date.set(getTimeObject(newDate));
    date.toISOString();
    date.format();
    setTimestamp(date);
    onChange({
      target: {
        name: name,
        type: 'datetime',
        value: date
      }
    });
  };

  (0, _react.useEffect)(function () {
    if (!!value && (0, _moment["default"])(value).isValid()) {
      var newDate = value._isAMomentObject === true ? value : (0, _moment["default"])(value);
      setDate(newDate);
    } else {
      setTimestamp(null);
    }

    setIsInit(true);
  }, [value]);

  if (!isInit) {
    return null;
  }

  return _react["default"].createElement(_Wrapper["default"], null, _react["default"].createElement(_core.DatePicker, _extends({}, rest, {
    name: "datetime",
    disabled: disabled,
    onChange: function onChange(_ref2) {
      var target = _ref2.target;
      setDate(target.value, timestamp);
    },
    tabIndex: tabIndex,
    value: timestamp
  })), _react["default"].createElement(_core.TimePicker, {
    name: "time",
    disabled: disabled,
    onChange: function onChange(_ref3) {
      var target = _ref3.target;
      setData(target.value);
    },
    seconds: false,
    tabIndex: tabIndex,
    value: getTimeString(timestamp) || '',
    step: step
  }));
}

DateTime.defaultProps = {
  autoFocus: false,
  disabled: false,
  id: null,
  onChange: function onChange() {},
  placeholder: null,
  tabIndex: '0',
  value: null,
  withDefaultValue: false,
  step: 30
};
DateTime.propTypes = {
  autoFocus: _propTypes["default"].bool,
  disabled: _propTypes["default"].bool,
  id: _propTypes["default"].string,
  name: _propTypes["default"].string.isRequired,
  onChange: _propTypes["default"].func,
  placeholder: _propTypes["default"].string,
  step: _propTypes["default"].number,
  tabIndex: _propTypes["default"].string,
  value: _propTypes["default"].oneOfType([_reactMomentProptypes["default"].momentObj, _propTypes["default"].string, _propTypes["default"].instanceOf(Date)]),
  withDefaultValue: _propTypes["default"].bool
};
var _default = DateTime;
exports["default"] = _default;